// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.23.3
// source: file_structure_service.proto

package protobufs

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	FileStructureService_ExtractStructure_FullMethodName = "/FileStructureService/ExtractStructure"
)

// FileStructureServiceClient is the client API for FileStructureService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FileStructureServiceClient interface {
	ExtractStructure(ctx context.Context, in *Files, opts ...grpc.CallOption) (FileStructureService_ExtractStructureClient, error)
}

type fileStructureServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFileStructureServiceClient(cc grpc.ClientConnInterface) FileStructureServiceClient {
	return &fileStructureServiceClient{cc}
}

func (c *fileStructureServiceClient) ExtractStructure(ctx context.Context, in *Files, opts ...grpc.CallOption) (FileStructureService_ExtractStructureClient, error) {
	stream, err := c.cc.NewStream(ctx, &FileStructureService_ServiceDesc.Streams[0], FileStructureService_ExtractStructure_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &fileStructureServiceExtractStructureClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FileStructureService_ExtractStructureClient interface {
	Recv() (*FileStructure, error)
	grpc.ClientStream
}

type fileStructureServiceExtractStructureClient struct {
	grpc.ClientStream
}

func (x *fileStructureServiceExtractStructureClient) Recv() (*FileStructure, error) {
	m := new(FileStructure)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FileStructureServiceServer is the server API for FileStructureService service.
// All implementations must embed UnimplementedFileStructureServiceServer
// for forward compatibility
type FileStructureServiceServer interface {
	ExtractStructure(*Files, FileStructureService_ExtractStructureServer) error
	mustEmbedUnimplementedFileStructureServiceServer()
}

// UnimplementedFileStructureServiceServer must be embedded to have forward compatible implementations.
type UnimplementedFileStructureServiceServer struct {
}

func (UnimplementedFileStructureServiceServer) ExtractStructure(*Files, FileStructureService_ExtractStructureServer) error {
	return status.Errorf(codes.Unimplemented, "method ExtractStructure not implemented")
}
func (UnimplementedFileStructureServiceServer) mustEmbedUnimplementedFileStructureServiceServer() {}

// UnsafeFileStructureServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FileStructureServiceServer will
// result in compilation errors.
type UnsafeFileStructureServiceServer interface {
	mustEmbedUnimplementedFileStructureServiceServer()
}

func RegisterFileStructureServiceServer(s grpc.ServiceRegistrar, srv FileStructureServiceServer) {
	s.RegisterService(&FileStructureService_ServiceDesc, srv)
}

func _FileStructureService_ExtractStructure_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Files)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FileStructureServiceServer).ExtractStructure(m, &fileStructureServiceExtractStructureServer{stream})
}

type FileStructureService_ExtractStructureServer interface {
	Send(*FileStructure) error
	grpc.ServerStream
}

type fileStructureServiceExtractStructureServer struct {
	grpc.ServerStream
}

func (x *fileStructureServiceExtractStructureServer) Send(m *FileStructure) error {
	return x.ServerStream.SendMsg(m)
}

// FileStructureService_ServiceDesc is the grpc.ServiceDesc for FileStructureService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FileStructureService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "FileStructureService",
	HandlerType: (*FileStructureServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ExtractStructure",
			Handler:       _FileStructureService_ExtractStructure_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "file_structure_service.proto",
}
