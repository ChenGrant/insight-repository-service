// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.23.3
// source: file_segment_service.proto

package protobufs

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	FileSegmentService_ExtractStructure_FullMethodName = "/FileSegmentService/ExtractStructure"
)

// FileSegmentServiceClient is the client API for FileSegmentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FileSegmentServiceClient interface {
	ExtractStructure(ctx context.Context, in *Files, opts ...grpc.CallOption) (FileSegmentService_ExtractStructureClient, error)
}

type fileSegmentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFileSegmentServiceClient(cc grpc.ClientConnInterface) FileSegmentServiceClient {
	return &fileSegmentServiceClient{cc}
}

func (c *fileSegmentServiceClient) ExtractStructure(ctx context.Context, in *Files, opts ...grpc.CallOption) (FileSegmentService_ExtractStructureClient, error) {
	stream, err := c.cc.NewStream(ctx, &FileSegmentService_ServiceDesc.Streams[0], FileSegmentService_ExtractStructure_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &fileSegmentServiceExtractStructureClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FileSegmentService_ExtractStructureClient interface {
	Recv() (*FileSegment, error)
	grpc.ClientStream
}

type fileSegmentServiceExtractStructureClient struct {
	grpc.ClientStream
}

func (x *fileSegmentServiceExtractStructureClient) Recv() (*FileSegment, error) {
	m := new(FileSegment)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FileSegmentServiceServer is the server API for FileSegmentService service.
// All implementations must embed UnimplementedFileSegmentServiceServer
// for forward compatibility
type FileSegmentServiceServer interface {
	ExtractStructure(*Files, FileSegmentService_ExtractStructureServer) error
	mustEmbedUnimplementedFileSegmentServiceServer()
}

// UnimplementedFileSegmentServiceServer must be embedded to have forward compatible implementations.
type UnimplementedFileSegmentServiceServer struct {
}

func (UnimplementedFileSegmentServiceServer) ExtractStructure(*Files, FileSegmentService_ExtractStructureServer) error {
	return status.Errorf(codes.Unimplemented, "method ExtractStructure not implemented")
}
func (UnimplementedFileSegmentServiceServer) mustEmbedUnimplementedFileSegmentServiceServer() {}

// UnsafeFileSegmentServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FileSegmentServiceServer will
// result in compilation errors.
type UnsafeFileSegmentServiceServer interface {
	mustEmbedUnimplementedFileSegmentServiceServer()
}

func RegisterFileSegmentServiceServer(s grpc.ServiceRegistrar, srv FileSegmentServiceServer) {
	s.RegisterService(&FileSegmentService_ServiceDesc, srv)
}

func _FileSegmentService_ExtractStructure_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Files)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FileSegmentServiceServer).ExtractStructure(m, &fileSegmentServiceExtractStructureServer{stream})
}

type FileSegmentService_ExtractStructureServer interface {
	Send(*FileSegment) error
	grpc.ServerStream
}

type fileSegmentServiceExtractStructureServer struct {
	grpc.ServerStream
}

func (x *fileSegmentServiceExtractStructureServer) Send(m *FileSegment) error {
	return x.ServerStream.SendMsg(m)
}

// FileSegmentService_ServiceDesc is the grpc.ServiceDesc for FileSegmentService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FileSegmentService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "FileSegmentService",
	HandlerType: (*FileSegmentServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ExtractStructure",
			Handler:       _FileSegmentService_ExtractStructure_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "file_segment_service.proto",
}
