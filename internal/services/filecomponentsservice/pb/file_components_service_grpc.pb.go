// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.23.3
// source: file_components_service.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	FileComponentsService_ExtractFilesComponents_FullMethodName = "/FileComponentsService/ExtractFilesComponents"
)

// FileComponentsServiceClient is the client API for FileComponentsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FileComponentsServiceClient interface {
	ExtractFilesComponents(ctx context.Context, in *Files, opts ...grpc.CallOption) (FileComponentsService_ExtractFilesComponentsClient, error)
}

type fileComponentsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFileComponentsServiceClient(cc grpc.ClientConnInterface) FileComponentsServiceClient {
	return &fileComponentsServiceClient{cc}
}

func (c *fileComponentsServiceClient) ExtractFilesComponents(ctx context.Context, in *Files, opts ...grpc.CallOption) (FileComponentsService_ExtractFilesComponentsClient, error) {
	stream, err := c.cc.NewStream(ctx, &FileComponentsService_ServiceDesc.Streams[0], FileComponentsService_ExtractFilesComponents_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &fileComponentsServiceExtractFilesComponentsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FileComponentsService_ExtractFilesComponentsClient interface {
	Recv() (*FileComponent, error)
	grpc.ClientStream
}

type fileComponentsServiceExtractFilesComponentsClient struct {
	grpc.ClientStream
}

func (x *fileComponentsServiceExtractFilesComponentsClient) Recv() (*FileComponent, error) {
	m := new(FileComponent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FileComponentsServiceServer is the server API for FileComponentsService service.
// All implementations must embed UnimplementedFileComponentsServiceServer
// for forward compatibility
type FileComponentsServiceServer interface {
	ExtractFilesComponents(*Files, FileComponentsService_ExtractFilesComponentsServer) error
	mustEmbedUnimplementedFileComponentsServiceServer()
}

// UnimplementedFileComponentsServiceServer must be embedded to have forward compatible implementations.
type UnimplementedFileComponentsServiceServer struct {
}

func (UnimplementedFileComponentsServiceServer) ExtractFilesComponents(*Files, FileComponentsService_ExtractFilesComponentsServer) error {
	return status.Errorf(codes.Unimplemented, "method ExtractFilesComponents not implemented")
}
func (UnimplementedFileComponentsServiceServer) mustEmbedUnimplementedFileComponentsServiceServer() {}

// UnsafeFileComponentsServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FileComponentsServiceServer will
// result in compilation errors.
type UnsafeFileComponentsServiceServer interface {
	mustEmbedUnimplementedFileComponentsServiceServer()
}

func RegisterFileComponentsServiceServer(s grpc.ServiceRegistrar, srv FileComponentsServiceServer) {
	s.RegisterService(&FileComponentsService_ServiceDesc, srv)
}

func _FileComponentsService_ExtractFilesComponents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Files)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FileComponentsServiceServer).ExtractFilesComponents(m, &fileComponentsServiceExtractFilesComponentsServer{stream})
}

type FileComponentsService_ExtractFilesComponentsServer interface {
	Send(*FileComponent) error
	grpc.ServerStream
}

type fileComponentsServiceExtractFilesComponentsServer struct {
	grpc.ServerStream
}

func (x *fileComponentsServiceExtractFilesComponentsServer) Send(m *FileComponent) error {
	return x.ServerStream.SendMsg(m)
}

// FileComponentsService_ServiceDesc is the grpc.ServiceDesc for FileComponentsService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FileComponentsService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "FileComponentsService",
	HandlerType: (*FileComponentsServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ExtractFilesComponents",
			Handler:       _FileComponentsService_ExtractFilesComponents_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "file_components_service.proto",
}
